From: afl1
Date: 2017/10/05
Subject: [PATCH] VideoPlayer: chapter seek fix

--- a/xbmc/cores/VideoPlayer/VideoPlayer.cpp
+++ b/xbmc/cores/VideoPlayer/VideoPlayer.cpp
@@ -2619,6 +2641,7 @@ void CVideoPlayer::HandleMessages()
         FlushBuffers(start, true, true);
         int64_t beforeSeek = GetTime();
         offset = DVD_TIME_TO_MSEC(start) - static_cast<int>(beforeSeek);
+        CLog::Log(LOGDEBUG, "VideoPlayer: SeekChapter:%d beforeSeek:%0.3f start:%0.3f",  msg.GetChapter(), beforeSeek / 1000.0, start / 1000000.0); 
         m_callback.OnPlayBackSeekChapter(msg.GetChapter());
       }
 
@@ -2692,12 +2692,14 @@
             mode.accurate = true;
             mode.trickplay = true;
             mode.sync = true;
+            CLog::Log(LOGDEBUG, "VideoPlayer: Videostream seek: %d", mode.time); 
             m_messenger.Put(new CDVDMsgPlayerSeek(mode));
           }
         }
         else
         {
           CloseStream(m_CurrentVideo, false);
+          CLog::Log(LOGDEBUG, "VideoPlayer: Reopen Videostream: %d id:%d", st.demuxerId, st.id); 
           OpenStream(m_CurrentVideo, st.demuxerId, st.id, st.source);
           CDVDMsgPlayerSeek::CMode mode;
           mode.time = (int)GetTime();
@@ -2705,6 +2707,7 @@
           mode.accurate = true;
           mode.trickplay = true;
           mode.sync = true;
+          CLog::Log(LOGDEBUG, "VideoPlayer: Videostream seek: %d", mode.time); 
           m_messenger.Put(new CDVDMsgPlayerSeek(mode));
         }
       }
diff --git a/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp b/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
index 31019d5..70aeda8 100644
--- a/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
+++ b/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
@@ -1147,6 +1147,7 @@ bool CDVDDemuxFFmpeg::SeekTime(double time, bool backwards, double *startpts)
   if (m_pFormatContext->start_time != (int64_t)AV_NOPTS_VALUE && !ismp3 && !m_bSup)
     seek_pts += m_pFormatContext->start_time;
 
+  CLog::Log(LOGDEBUG, "CDVDDemuxFFmpeg::%s - seek pts:%0.3f backwards:%d start_time:%0.3f", __FUNCTION__, (double)seek_pts / AV_TIME_BASE, backwards, (double)(m_pFormatContext->start_time) / AV_TIME_BASE);
   int ret;
   {
     CSingleLock lock(m_critSection);
@@ -1180,11 +1179,28 @@ bool CDVDDemuxFFmpeg::SeekTime(double time, bool backwards, double *startpts)
   if(m_currentPts == DVD_NOPTS_VALUE)
     CLog::Log(LOGDEBUG, "%s - unknown position after seek", __FUNCTION__);
   else
-    CLog::Log(LOGDEBUG, "%s - seek ended up on time %d", __FUNCTION__, (int)(m_currentPts / DVD_TIME_BASE * 1000));
-
+  {
+    CLog::Log(LOGDEBUG, "CDVDDemuxFFmpeg::%s - seek ended up on time %0.3fs", __FUNCTION__, m_currentPts / DVD_TIME_BASE);
+    double diff = (double)seek_pts/AV_TIME_BASE - m_currentPts / DVD_TIME_BASE;
+    if (diff > 2.0)
+    {
+      ret = av_seek_frame(m_pFormatContext, -1, seek_pts, 0);
+      if (ret >= 0)
+        UpdateCurrentPTS();
+      CLog::Log(LOGDEBUG, "CDVDDemuxFFmpeg::%s - 2.seek ended up on time %0.3fs", __FUNCTION__, m_currentPts / DVD_TIME_BASE);
+      double diff1 = (double)seek_pts/AV_TIME_BASE - m_currentPts / DVD_TIME_BASE;
+      if (diff1 < -3.0)
+      {
+        ret = av_seek_frame(m_pFormatContext, -1, seek_pts, AVSEEK_FLAG_BACKWARD);
+        if (ret >= 0)
+          UpdateCurrentPTS();
+        CLog::Log(LOGDEBUG, "CDVDDemuxFFmpeg::%s - 3.seek ended up on time %0.3fs", __FUNCTION__, m_currentPts / DVD_TIME_BASE);
+      }  
+    }  
+  }
   // in this case the start time is requested time
   if (startpts)
-    *startpts = DVD_MSEC_TO_TIME(time);
+    *startpts = m_currentPts == DVD_NOPTS_VALUE ? DVD_MSEC_TO_TIME(time) : DVD_MSEC_TO_TIME(m_currentPts/1000);
 
   if (ret >= 0)
   {
@@ -1756,7 +1772,9 @@ bool CDVDDemuxFFmpeg::SeekChapter(int chapter, double* startpts)
 
   AVChapter *ch = m_pFormatContext->chapters[chapter-1];
   double dts = ConvertTimestamp(ch->start, ch->time_base.den, ch->time_base.num);
-  return SeekTime(DVD_TIME_TO_MSEC(dts), true, startpts);
+  bool rtn = SeekTime(DVD_TIME_TO_MSEC(dts), true, startpts);
+  CLog::Log(LOGDEBUG, "CDVDDemuxFFmpeg::%s - seeking chapter:%d start:%0.3f startpts:%0.3f ", __FUNCTION__, chapter, (double)ch->start * ch->time_base.num  / ch->time_base.den, DVD_TIME_TO_MSEC(*startpts) / 1000.0);
+  return rtn;
 }
 
 std::string CDVDDemuxFFmpeg::GetStreamCodecName(int iStreamId)
--
